---


- name: taking all zip files from the required locations
  hosts: all
  become_user: oracle11
  tasks:
    - name: droping and recreate the DB by using shell script
      shell: . ~/.bce.ini;/irb/bce/admin/ccm_wa/PRD-bce/PRD/build_scripts/build_drop_and_create_db_inst.sh "{{ database_sid }}" /irb/bce/admin/oracle_build_dbs/RHEL7-EM64T_64_jvm_12102_SE_WE8ISO8859P15.tar.Z 12c /u02/oracle/oradata/{{ database_sid }} WE8ISO8859P15 9.0 SE  
      when: ansible_hostname == "db685cn" and INSTALLATION_MODE == "FRESH" 


- name: taking all zip files from the required locations
  hosts: Appservers
  become_user: genadmin
  tasks:
    - name: taking the zip files and unzip in required location based on the variables file
      when: INSTALLATION_MODE == "FRESH" 
      unarchive:
        src: "{{ item.package_name }}"
        dest: "{{ item.install_dir }}"
        remote_src: yes
        keep_newer: yes
      with_items: 
        - {package_name: "{{ RC_LOCATION }}ECA-9.0.9jJ12c.64.WebLogic_autoinstaller.zip", install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ RC_LOCATION }}ECA-9.0.9jJ12c.64.JBoss_autoinstaller.zip", install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ RC_LOCATION }}RB-9.0.9lX12c_autoinstaller.zip",  install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ UTILITIES_LOCATION }}", install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ PF_LOCATION }}", install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ PF_LOCATION }}", install_dir: "{{ INSTALL_DIR }}"}
        - {package_name: "{{ AI_LOCATION }}", install_dir: "{{ INSTALL_DIR }}"}
    - name: updating and copying all required properties files from current location to installation location based on the variable file
      template:
        src: "{{ item }}"
        dest: "{{ INSTALL_DIR }}AutoInstaller"
      when: INSTALLATION_MODE == "FRESH" 
      with_items: ["config_RBM.properties","config_RB.properties","config_PF.properties","config_ECA.properties","config.properties"]
    - template:
        src: install.xml
        dest: "{{ INSTALL_DIR }}"
      when: INSTALLATION_MODE == "FRESH" 
    - file: dest="{{ INSTALL_DIR }}install.sh" mode=755
    - command: "{{ INSTALL_DIR }}install.sh"
      args:
        chdir: "{{ INSTALL_DIR }}"
      when: INSTALLATION_MODE == "FRESH" 
      



- name: upgrading the environment
  hosts: Appservers
  vars: 
    InternalUpgrade: yes
    SchemaTopUpFile:
    SchemaTopUpDir: 
 

<?xml version="1.0" encoding="UTF-8"?>

<!-- XML Schema for type definitions of component ECA -->
<!-- that are service independent. -->

<xsd:schema
  targetNamespace="urn:Convergys-Interface-ECA"
  xmlns="urn:Convergys-Interface-ECA"
  xmlns:eca="urn:Convergys-Interface-ECA"
  elementFormDefault="qualified"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:base="urn:Convergys-Interface-Base"
  xmlns:ecaAccount="urn:Convergys-Interface-ECA-Account"
  xmlns:ecaCustomer="urn:Convergys-Interface-ECA-Customer"
>
  <!-- Imports -->
  <xsd:import
    namespace="urn:Convergys-Interface-Base"
    schemaLocation="../../schema/Base/Base.xsd"
  />

  <xsd:import
    namespace="urn:Convergys-Interface-ECA-Account"
    schemaLocation="../../schema/ECA/ECA_Account.xsd"
  />

  <xsd:import
    namespace="urn:Convergys-Interface-ECA-Customer"
    schemaLocation="../../schema/ECA/ECA_Customer.xsd"
  />


  <!-- Enumeration Types -->
  <xsd:simpleType name="AttributeType">
    <xsd:restriction base="xsd:int">
<!-- Enums are represented as int values in IML. The following list provides a mapping of
the different enum options supported by the server. Please note that the server might have
been upgraded to a more uptodate release and might support additional options. Some options
may also be deprecated.

       0 = ATString
       1 = ATDateTime
       2 = ATNumber

-->
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="DatabaseValueUnionType">
    <xsd:restriction base="xsd:int">
<!-- Enums are represented as int values in IML. The following list provides a mapping of
the different enum options supported by the server. Please note that the server might have
been upgraded to a more uptodate release and might support additional options. Some options
may also be deprecated.

       0 = DVUTString
       1 = DVUTDtm
       2 = DVUTDat
       3 = DVUTInteger
       4 = DVUTLong
       5 = DVUTBigNumber

-->
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="LoggingPriority">
    <xsd:restriction base="xsd:int">
<!-- Enums are represented as int values in IML. The following list provides a mapping of
the different enum options supported by the server. Please note that the server might have
been upgraded to a more uptodate release and might support additional options. Some options
may also be deprecated.

       1 = LPDebug
       2 = LPInfo
       3 = LPWarn
       4 = LPError
       5 = LPFatal

-->
    </xsd:restriction>
  </xsd:simpleType>


  <!-- Structure and Exception Types -->
  <xsd:complexType name="AttributeField">
    <xsd:complexContent>
      <xsd:extension base="eca:DataObject">
        <xsd:sequence>
          <xsd:element name="fieldIndex" type="xsd:int"/>
          <xsd:element name="fieldValueString" type="xsd:string" minOccurs="0" nillable="true"/>
          <xsd:element name="fieldValueDtm" type="xsd:dateTime" minOccurs="0" nillable="true"/>
          <xsd:element name="fieldType" type="eca:AttributeType"/>
          <xsd:element name="fieldName" type="xsd:string" minOccurs="0" nillable="true"/>
          <xsd:element name="fieldLength" type="xsd:int"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DBErrorDetails">
    <xsd:complexContent>
      <xsd:extension base="eca:DataObject">
        <xsd:sequence>
          <xsd:element name="number" type="xsd:int"/>
          <xsd:element name="name" type="xsd:string"/>
          <xsd:element
            name="parameters"
            type="xsd:string"
            minOccurs="0"
            maxOccurs="unbounded"
          />
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DataObject" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DatabaseValueUnion">
    <xsd:complexContent>
      <xsd:extension base="eca:DataObject">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="0" nillable="true"/>
          <xsd:element name="type" type="eca:DatabaseValueUnionType"/>
          <xsd:element name="valueString" type="xsd:string" minOccurs="0" nillable="true"/>
          <xsd:element name="valueDtm" type="xsd:dateTime" minOccurs="0" nillable="true"/>
          <xsd:element name="valueDat" type="xsd:dateTime" minOccurs="0" nillable="true"/>
          <xsd:element name="valueInt" type="xsd:int" minOccurs="0" nillable="true"/>
          <xsd:element name="valueLong" type="xsd:long" minOccurs="0" nillable="true"/>
          <xsd:element name="valueBigNumber" type="xsd:double" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="PrimaryKey" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="eca:SimplePrimaryKey">
        <xsd:sequence>
          <xsd:element name="hint" type="xsd:int" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="QueryTimeframe_1">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element name="earliestEndDtm" type="xsd:dateTime" minOccurs="0" nillable="true"/>
          <xsd:element name="latestStartDtm" type="xsd:dateTime" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SimplePrimaryKey" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="eca:DataObject">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AccountNotFoundException">
    <xsd:complexContent>
      <xsd:extension base="eca:NoSuchEntityException">
        <xsd:sequence>
          <xsd:element name="accountPK" type="ecaAccount:AccountPK"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AfterHistoryEndException">
    <xsd:complexContent>
      <xsd:extension base="eca:HistoryException">
        <xsd:sequence>
          <xsd:element name="endDtm" type="xsd:dateTime"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AmbiguousSearchCriteriaException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ApplicationException">
    <xsd:complexContent>
      <xsd:extension base="base:BaseException">
        <xsd:sequence>
          <xsd:element name="incidentRef" type="xsd:string" minOccurs="0" nillable="true"/>
          <xsd:element name="dbErrorDetails" type="eca:DBErrorDetails" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="BeforeHistoryStartException">
    <xsd:complexContent>
      <xsd:extension base="eca:HistoryException">
        <xsd:sequence>
          <xsd:element name="startDtm" type="xsd:dateTime"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="BusinessLogicException">
    <xsd:complexContent>
      <xsd:extension base="eca:ApplicationException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ChangeConflictException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DataNotFoundException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="tableName" type="xsd:string"/>
          <xsd:element
            name="columnValues"
            type="eca:DatabaseValueUnion"
            minOccurs="0"
            maxOccurs="unbounded"
          />
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DataPartitioningException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DatabaseLinkException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ECAConfigurationException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="id" type="xsd:string"/>
          <xsd:element
            name="argNames"
            type="xsd:string"
            minOccurs="0"
            maxOccurs="unbounded"
          />
          <xsd:element
            name="args"
            type="xsd:string"
            minOccurs="0"
            maxOccurs="unbounded"
          />
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="HistoryException" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="primaryKey" type="eca:PrimaryKey" minOccurs="0" nillable="true"/>
          <xsd:element name="whenDtm" type="xsd:dateTime"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="InvalidAttributeIndexException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="tableName" type="xsd:string"/>
          <xsd:element name="index" type="xsd:int"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="InvalidDateException" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="InvalidParameterCombination">
    <xsd:complexContent>
      <xsd:extension base="eca:ParameterException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="NoBillingOfferFoundException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="accountPK" type="ecaAccount:AccountPK" minOccurs="0" nillable="true"/>
          <xsd:element name="customerPK" type="ecaCustomer:CustomerPK" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="NoSuchEntityException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="simplePrimaryKey" type="eca:SimplePrimaryKey"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="NullParameterException">
    <xsd:complexContent>
      <xsd:extension base="eca:ParameterException">
        <xsd:sequence>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ParameterException">
    <xsd:complexContent>
      <xsd:extension base="eca:ApplicationException">
        <xsd:sequence>
          <xsd:element name="parameterName" type="xsd:string"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="PrimaryKeyViolationException">
    <xsd:complexContent>
      <xsd:extension base="eca:BusinessLogicException">
        <xsd:sequence>
          <xsd:element name="primaryKey" type="eca:PrimaryKey"/>
          <xsd:element name="columnValues" type="eca:ArrayOfDatabaseValueUnion" minOccurs="0" nillable="true"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="StringLengthException">
    <xsd:complexContent>
      <xsd:extension base="eca:ParameterException">
        <xsd:sequence>
          <xsd:element name="parameterValue" type="xsd:string"/>
          <xsd:element name="minLength" type="xsd:int"/>
          <xsd:element name="maxLength" type="xsd:int"/>
       </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>



  <!-- Array Types -->
  <xsd:complexType name="ArrayOfInt32">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="xsd:int"
            minOccurs="0"
            maxOccurs="unbounded"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfNullableInt32">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="xsd:int"
            minOccurs="0"
            maxOccurs="unbounded"
            nillable="true"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfString">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="xsd:string"
            minOccurs="0"
            maxOccurs="unbounded"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfNullableString">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="xsd:string"
            minOccurs="0"
            maxOccurs="unbounded"
            nillable="true"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfAttributeField">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="eca:AttributeField"
            minOccurs="0"
            maxOccurs="unbounded"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfNullableAttributeField">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="eca:AttributeField"
            minOccurs="0"
            maxOccurs="unbounded"
            nillable="true"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ArrayOfDatabaseValueUnion">
    <xsd:complexContent>
      <xsd:extension base="base:BaseStructure">
        <xsd:sequence>
          <xsd:element
            name="a"
            type="eca:DatabaseValueUnion"
            minOccurs="0"
            maxOccurs="unbounded"
          />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


</xsd:schema>

<!-- eof ECA.xsd -->
